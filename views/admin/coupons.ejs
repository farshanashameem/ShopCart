<!DOCTYPE html>
<html lang="en">
<%- include('../partials/head', { title: 'Coupon Management' }) %>

  <body>
    <div class="container-fluid">
      <div class="row min-vh-100">
        <%- include('../partials/adminDashboard') %>

          <div class="col-md-12 d-flex flex-column mt-3 text-center">
            <h1><b>Coupon Management</b></h1>

            <div class="p-3 m-3 border-round">
              <div class="container mt-2">
                <!-- Add Coupon Button -->
                <div class="mb-3">
                  <button type="button" class="btn btn-outline-primary mb-3" id="showCouponsBtn">
                    + ADD A NEW COUPON
                  </button>
                </div>

                <div id="couponBar">
                  <form class="row g-3 couponAdd mb-4 d-none" id="couponForm">
                    <h3 class="mb-4 fw-bold text-info" id="formTitle">Add Coupon</h3>

                    <!-- Coupon Code -->
                    <div class="col-md-6">
                      <label class="form-label">Code</label>
                      <input type="text" name="code" id="code" class="form-control border-round"
                        placeholder="Enter code">
                      <p class="text-danger m-0" id="error-code"></p>
                    </div>

                    <!-- Category -->
                    <div class="col-md-6">
                      <label class="form-label">Category</label>
                      <select name="category" id="category" class="form-control border-round">
                        <option value="">Select Category</option>
                        <option value="all"> All</option>
                        <% categories.forEach(cat=> { %>
                          <option value="<%= cat.name %>">
                            <%= cat.name %>
                          </option>
                          <% }) %>
                      </select>
                      <p class="text-danger m-0" id="error-category"></p>
                    </div>

                    <!-- Discount Value -->
                    <div class="col-md-6">
                      <label class="form-label">Discount Value</label>
                      <input type="number" name="discountValue" id="discountValue" class="form-control border-round">
                      <p class="text-danger m-0" id="error-discountValue"></p>
                    </div>

                    <!-- Discount Type -->
                    <div class="col-md-6">
                      <label class="form-label">Discount Type</label>
                      <select name="discountType" id="discountType" class="form-control border-round">
                        <option value="">Select Type</option>
                        <option value="flat">Flat</option>
                        <option value="percentage">Percentage</option>
                      </select>
                      <p class="text-danger m-0" id="error-discountType"></p>
                    </div>

                    <!--Order amount shouold be greater than-->
                    <div class="col-md-6">
                      <label class="form-label ">Minimum order Amount</label>
                      <input type="number" name="minValue" id="minValue" class="form-control border-round">
                      <p class="text-danger m-0" id="error-minValue"></p>
                    </div>

                    <!-- Usage Limit -->
                    <div class="col-md-6">
                      <label class="form-label ">Usage Limit</label>
                      <input type="number" name="usageLimit" id="usageLimit" class="form-control border-round">
                      <p class="text-danger m-0" id="error-usageLimit"></p>
                    </div>

                    <!-- Start Date -->
                    <div class="col-md-6">
                      <label class="form-label">Start Date</label>
                      <input type="date" name="startDate" id="startDate" class="form-control border-round">
                      <p class="text-danger m-0" id="error-startDate"></p>
                    </div>

                    <!-- End Date -->
                    <div class="col-md-6">
                      <label class="form-label">End Date</label>
                      <input type="date" name="endDate" id="endDate" class="form-control border-round">
                      <p class="text-danger m-0" id="error-endDate"></p>
                    </div>

                    <div class="ms-3">
                      <button type="submit" class="btn btn-primary col-md-3 " id="saveBtn">Save</button>
                      <button type="button" class="btn btn-outline-danger bg-danger col-md-3 text-light"
                        id="cancelBtn">Cancel</button>
                    </div>
                  </form>
                </div>
              </div>

              <!-- Coupon List -->
              <div class="couponList">
                <table class="table table-bordered table-striped">
                  <thead>
                    <th>Coupon Code</th>
                    <th>Discount</th>
                    <th>Type</th>
                    <th>Limit</th>
                    <th>Min.order</th>
                    <th>Used</th>
                    <th>Start</th>
                    <th>End</th>
                    <th>Action</th>
                  </thead>
                  <tbody id="couponTableBody">
                    <% coupon.forEach(c=> { %>
                      <tr id="coupon-<%= c._id %>" data-id="<%= c._id %>" data-code="<%= c.code %>"
                        data-category="<%= c.category %>" data-discountvalue="<%= c.discountValue %>"
                        data-discounttype="<%= c.discountType %>" data-minorder="<%= c.minValue %>"
                        data-usagelimit="<%= c.usageLimit %>" 
                       data-startdate="<%= c.startDate ? c.startDate.toISOString().split('T')[0] : '' %>" 
                      data-enddate="<%= c.endDate ? c.endDate.toISOString().split('T')[0] : '' %>">
                        <td>
                          <%= c.code %>
                        </td>
                        <td>
                          <%= c.discountValue %>
                        </td>
                        <td>
                          <%= c.discountType %>
                        </td>
                        <td>
                          <%= c.usageLimit %>
                        </td>
                        <td>
                          <%= c.minValue %>
                        </td>
                        <td>
                          <%= c.usageCount %>
                        </td>
                        <td>
                          <%= c.startDate ? c.startDate.toLocaleDateString(): '' %>
                        </td>
                        <td>
                          <%= c.endDate ? c.endDate.toLocaleDateString() : '' %>
                        </td>
                        <td>
                          <button class="btn btn-sm btn-warning editBtn" data-id="<%= c._id %>">Edit</button>
                          <button type="button" class="btn btn-sm <%= c.isActive ? 'btn-danger' : 'btn-success' %> toggleBtn"
                            data-id="<%= c._id %>" id="toggleBtn">
                            <%= c.isActive ? 'Delete' : 'Restore' %>
                          </button>
                        </td>
                      </tr>
                      <% }) %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <footer class="text-center py-4 small text-muted border-top mt-4 fw-bold">
            © 2025 | ShopCart | All Rights Reserved.
          </footer>
      </div>
    </div>

    <!-- Bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      const showBtn = document.getElementById("showCouponsBtn");
      const cancelBtn = document.getElementById("cancelBtn");
      const couponForm = document.getElementById("couponForm");
      const couponTableBody = document.getElementById("couponTableBody");
      const formTitle = document.getElementById("formTitle");
      

      let editingId = null;

      // Show add form
      showBtn.addEventListener("click", () => {
        editingId = null;
        couponForm.reset();
        formTitle.innerText = "Add Coupon";
        couponForm.classList.remove("d-none");
      });

      // Hide form
      cancelBtn.addEventListener("click", () => {
        couponForm.classList.add("d-none");
        editingId = null;
      });

      // Clear error messages
      function clearErrors() {
        document.querySelectorAll("[id^=error-]").forEach(el => el.innerText = "");
      }

      // ✅ Handle form submit (Add + Edit) FIXED
      couponForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        clearErrors();

        const formData = new FormData(couponForm);
        const data = Object.fromEntries(formData.entries());

        try {
          const url = editingId ? `/admin/editCoupon/${editingId}` : "/admin/addCoupon";
          const method = editingId ? "PUT" : "POST";

          const res = await fetch(url, {
            method,
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data)
          });

          const result = await res.json();

          if (!result.success) {
            if (result.errors) {
              for (let field in result.errors) {
                const errorEl = document.getElementById(`error-${field}`);
                if (errorEl) errorEl.innerText = result.errors[field];
              }
            } else {
              Swal.fire({ icon: "error", title: "Oops...", text: result.message || "Something went wrong" });
            }
            return;
          }

          const c = result.coupon;

          if (editingId) {
            // ✅ Update existing row with dataset
            const row = document.getElementById(`coupon-${c._id}`);
            row.outerHTML = `
          <tr id="coupon-${c._id}" 
              data-id="${c._id}"
              data-code="${c.code}"
              data-category="${c.category}"
              data-discountvalue="${c.discountValue}"
              data-discounttype="${c.discountType}"
              data-minorder="${c.minValue}"
              data-usagelimit="${c.usageLimit}"
              data-startdate="${c.startDate ? new Date(c.startDate).toISOString().split('T')[0] : ''}"
              data-enddate="${c.endDate ? new Date(c.endDate).toISOString().split('T')[0] : ''}">
            <td>${c.code}</td>
            <td>${c.discountValue}</td>
            <td>${c.discountType}</td>
            <td>${c.usageLimit}</td>
            <td>${c.minValue}</td>
            <td>${c.usageCount || 0}</td>
            <td>${c.startDate ? new Date(c.startDate).toLocaleDateString() : ""}</td>
            <td>${c.endDate ? new Date(c.endDate).toLocaleDateString() : ""}</td>
            <td>
              <button class="btn btn-sm btn-warning editBtn" data-id="${c._id}">Edit</button>
              <button class="btn btn-sm ${c.isActive ? 'btn-danger' : 'btn-success'} toggleBtn" data-id="${c._id}">
                ${c.isActive ? 'Delete' : 'Restore'}
              </button>
            </td>
          </tr>`;
            Swal.fire({ icon: "success", title: "Updated!", text: "Coupon updated successfully.", timer: 2000, showConfirmButton: false });
          } else {
            // ✅ Add new row with dataset
            const newRow = `
          <tr id="coupon-${c._id}" 
              data-id="${c._id}"
              data-code="${c.code}"
              data-category="${c.category}"
              data-discountvalue="${c.discountValue}"
              data-discounttype="${c.discountType}"
              data-minorder="${c.minValue}"
              data-usagelimit="${c.usageLimit}"
              data-startdate="${c.startDate}"
              data-enddate="${c.endDate}">
            <td>${c.code}</td>
            <td>${c.discountValue}</td>
            <td>${c.discountType}</td>
            <td>${c.usageLimit}</td>
            <td>${c.minValue}</td>
            <td>${c.usageCount || 0}</td>
            <td>${c.startDate ? new Date(c.startDate).toLocaleDateString() : ""}</td>
            <td>${c.endDate ? new Date(c.endDate).toLocaleDateString() : ""}</td>
            <td>
              <button class="btn btn-sm btn-warning editBtn" data-id="${c._id}">Edit</button>
              <button class="btn btn-sm ${c.isActive ? 'btn-danger' : 'btn-success'} toggleBtn" data-id="${c._id}">
                ${c.isActive ? 'Delete' : 'Restore'}
              </button>
            </td>
          </tr>`;
            couponTableBody.insertAdjacentHTML("afterbegin", newRow);
            Swal.fire({ icon: "success", title: "Added!", text: "Coupon added successfully.", timer: 2000, showConfirmButton: false });
          }

          couponForm.reset();
          couponForm.classList.add("d-none");
          editingId = null;

        } catch (err) {
          console.error(err);
          Swal.fire({ icon: "error", title: "Request Failed", text: "Something went wrong while saving the coupon." });
        }
      });

      // ✅ Edit button click
      document.addEventListener("click", (e) => {
        if (e.target.classList.contains("editBtn")) {
          const row = e.target.closest("tr");
          editingId = row.dataset.id;

          document.getElementById("code").value = row.dataset.code;
          document.getElementById("category").value = row.dataset.category;
          document.getElementById("discountValue").value = row.dataset.discountvalue;
          document.getElementById("discountType").value = row.dataset.discounttype;
          document.getElementById("minValue").value = row.dataset.minorder;
          document.getElementById("usageLimit").value = row.dataset.usagelimit;
          document.getElementById("startDate").value = row.dataset.startdate ? row.dataset.startdate.split("T")[0] : "";
          document.getElementById("endDate").value = row.dataset.enddate ? row.dataset.enddate.split("T")[0] : "";

          formTitle.innerText = "Edit Coupon";
          couponForm.classList.remove("d-none");
        }
      });

      document.addEventListener("click", async (e) => {
  if (e.target.classList.contains("toggleBtn")) {
    const btn = e.target;
    const id = btn.dataset.id;
    const isDelete = btn.classList.contains("btn-danger"); // if it's currently "Delete" mode

    // Ask for confirmation
    const result = await Swal.fire({
      title: isDelete ? "Delete this coupon?" : "Restore this coupon?",
      text: isDelete
        ? "This coupon will be deactivated."
        : "This coupon will be restored.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: isDelete ? "#d33" : "#28a745",
      cancelButtonColor: "#6c757d",
      confirmButtonText: isDelete ? "Yes, delete it!" : "Yes, restore it!",
    });

    if (result.isConfirmed) {
      try {
        const res = await fetch(`/admin/coupons/toggle/${id}`, {
          method: "PATCH",
          headers: { "Content-Type": "application/json" },
        });

        const data = await res.json();
        if (!data.success) {
          return Swal.fire("Error!", data.error || "Something went wrong.", "error");
        }

        // ✅ Update button text & style dynamically
        if (isDelete) {
          btn.classList.remove("btn-danger");
          btn.classList.add("btn-success");
          btn.textContent = "Restore";
        } else {
          btn.classList.remove("btn-success");
          btn.classList.add("btn-danger");
          btn.textContent = "Delete";
        }

        Swal.fire({
          icon: "success",
          title: isDelete ? "Deleted!" : "Restored!",
          text: `Coupon ${isDelete ? "deactivated" : "restored"} successfully.`,
          timer: 2000,
          showConfirmButton: false,
        });
      } catch (err) {
        console.error(err);
        Swal.fire("Error!", "Server error. Try again.", "error");
      }
    }
  }
});


    </script>


  </body>

</html>