<!-- Products Grid -->
<div class="col-12 col-md-9">
  <div class="row row-cols-2 row-cols-md-3 g-4">
    <% products.forEach(product => { %>
      <div class="col">
        <div class="product-card position-relative">
          <a href="/details/<%= product._id %>" class="text-decoration-none">
            <img src="<%= product.firstImage %>" alt="<%= product.name %>"
                 class="img-fluid w-100 rounded mb-2">
          </a>

          <!-- Wishlist Button -->
          <button 
            class="btn position-absolute top-0 end-0 m-2 wishlist-btn"
            data-product-id="<%= product._id %>"
            style="background: transparent; border: none;">
            <i class="bi <%= product.isWishlisted ? 'bi-heart-fill text-danger' : 'bi-heart' %> fs-4"></i>
          </button>

          <a href="/details/<%= product._id %>" class="text-decoration-none">
            <h5 class="text-truncate"><b><%= product.name %></b></h5>
            <h6 class="text-truncate"><%= product.description %></h6>
            <p>
              Price: 
              <% if (product.maxPrice === product.minPrice) { %>
                ‚Çπ<%= product.minPrice %>
              <% } else { %>
                <del>‚Çπ<%= product.maxPrice %></del> ‚Çπ<%= product.minPrice %>
              <% } %>
            </p>
          </a>
        </div>
      </div>
    <% }) %>
  </div>
</div>

<!-- Responsive Fix -->
<style>
  .product-card h5, .product-card h6 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  @media (max-width: 576px) {
    .product-card h5, .product-card h6 {
      white-space: normal;
    }
  }
</style>

<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  document.querySelectorAll('.wishlist-btn').forEach(btn => {
    btn.addEventListener('click', async function (e) {
      e.preventDefault();

      const productId = this.dataset.productId;
      const icon = this.querySelector('i');
      const isFilled = icon.classList.contains('bi-heart-fill');

      try {
        // Fetch product variant (needed for add/remove)
        const variantRes = await fetch(`/api/products/${productId}/variants`);
        const variantData = await variantRes.json();

        if (!variantData.success || !variantData.variants.length) {
          return Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'No variants available for this product!'
          });
        }

        const firstVariant = variantData.variants[0];
        const payload = {
          productId,
          size: firstVariant.size,
          color: firstVariant.colorId
        };

        if (isFilled) {
          // üóë Remove from Wishlist
          const res = await fetch(`/wishlistItemDelete/${productId}/${firstVariant._id}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });
          const data = await res.json();

          if (data.success) {
            icon.classList.remove('bi-heart-fill', 'text-danger');
            icon.classList.add('bi-heart');
            Swal.fire({
              icon: 'info',
              title: 'Removed from Wishlist',
              text: data.message,
              timer: 1500,
              showConfirmButton: false
            });
          } else {
            Swal.fire({ icon: 'warning', title: 'Notice', text: data.message });
          }

        } else {
          // ‚ù§Ô∏è Add to Wishlist
          const res = await fetch('/addToWishlist', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });
          const data = await res.json();

          if (data.success) {
            icon.classList.remove('bi-heart');
            icon.classList.add('bi-heart-fill', 'text-danger');
            Swal.fire({
              icon: 'success',
              title: 'Added to Wishlist',
              text: data.message,
              timer: 1500,
              showConfirmButton: false
            });
          } else {
            Swal.fire({ icon: 'warning', title: 'Notice', text: data.message });
          }
        }
      } catch (err) {
        console.error('Wishlist error:', err);
        Swal.fire({
          icon: 'error',
          title: 'Something went wrong!',
          text: 'Please try again later.'
        });
      }
    });
  });
</script>
